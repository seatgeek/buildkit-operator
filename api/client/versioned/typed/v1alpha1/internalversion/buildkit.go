// Code generated by client-gen-v0.32. DO NOT EDIT.

package internalversion

import (
	context "context"

	scheme "github.com/seatgeek/buildkit-operator/api/client/versioned/scheme"
	v1alpha1 "github.com/seatgeek/buildkit-operator/api/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// BuildkitsGetter has a method to return a BuildkitInterface.
// A group's client should implement this interface.
type BuildkitsGetter interface {
	Buildkits(namespace string) BuildkitInterface
}

// BuildkitInterface has methods to work with Buildkit resources.
type BuildkitInterface interface {
	Create(ctx context.Context, buildkit *v1alpha1.Buildkit, opts v1.CreateOptions) (*v1alpha1.Buildkit, error)
	Update(ctx context.Context, buildkit *v1alpha1.Buildkit, opts v1.UpdateOptions) (*v1alpha1.Buildkit, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, buildkit *v1alpha1.Buildkit, opts v1.UpdateOptions) (*v1alpha1.Buildkit, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.Buildkit, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.BuildkitList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.Buildkit, err error)
	BuildkitExpansion
}

// buildkits implements BuildkitInterface
type buildkits struct {
	*gentype.ClientWithList[*v1alpha1.Buildkit, *v1alpha1.BuildkitList]
}

// newBuildkits returns a Buildkits
func newBuildkits(c *V1alpha1Client, namespace string) *buildkits {
	return &buildkits{
		gentype.NewClientWithList[*v1alpha1.Buildkit, *v1alpha1.BuildkitList](
			"buildkits",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.Buildkit { return &v1alpha1.Buildkit{} },
			func() *v1alpha1.BuildkitList { return &v1alpha1.BuildkitList{} },
		),
	}
}
