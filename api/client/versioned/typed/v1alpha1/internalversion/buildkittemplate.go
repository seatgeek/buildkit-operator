// Code generated by client-gen-v0.32. DO NOT EDIT.

package internalversion

import (
	context "context"

	scheme "github.com/seatgeek/buildkit-operator/api/client/versioned/scheme"
	v1alpha1 "github.com/seatgeek/buildkit-operator/api/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// BuildkitTemplatesGetter has a method to return a BuildkitTemplateInterface.
// A group's client should implement this interface.
type BuildkitTemplatesGetter interface {
	BuildkitTemplates(namespace string) BuildkitTemplateInterface
}

// BuildkitTemplateInterface has methods to work with BuildkitTemplate resources.
type BuildkitTemplateInterface interface {
	Create(ctx context.Context, buildkitTemplate *v1alpha1.BuildkitTemplate, opts v1.CreateOptions) (*v1alpha1.BuildkitTemplate, error)
	Update(ctx context.Context, buildkitTemplate *v1alpha1.BuildkitTemplate, opts v1.UpdateOptions) (*v1alpha1.BuildkitTemplate, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, buildkitTemplate *v1alpha1.BuildkitTemplate, opts v1.UpdateOptions) (*v1alpha1.BuildkitTemplate, error)
	Delete(ctx context.Context, name string, opts v1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts v1.DeleteOptions, listOpts v1.ListOptions) error
	Get(ctx context.Context, name string, opts v1.GetOptions) (*v1alpha1.BuildkitTemplate, error)
	List(ctx context.Context, opts v1.ListOptions) (*v1alpha1.BuildkitTemplateList, error)
	Watch(ctx context.Context, opts v1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts v1.PatchOptions, subresources ...string) (result *v1alpha1.BuildkitTemplate, err error)
	BuildkitTemplateExpansion
}

// buildkitTemplates implements BuildkitTemplateInterface
type buildkitTemplates struct {
	*gentype.ClientWithList[*v1alpha1.BuildkitTemplate, *v1alpha1.BuildkitTemplateList]
}

// newBuildkitTemplates returns a BuildkitTemplates
func newBuildkitTemplates(c *V1alpha1Client, namespace string) *buildkitTemplates {
	return &buildkitTemplates{
		gentype.NewClientWithList[*v1alpha1.BuildkitTemplate, *v1alpha1.BuildkitTemplateList](
			"buildkittemplates",
			c.RESTClient(),
			scheme.ParameterCodec,
			namespace,
			func() *v1alpha1.BuildkitTemplate { return &v1alpha1.BuildkitTemplate{} },
			func() *v1alpha1.BuildkitTemplateList { return &v1alpha1.BuildkitTemplateList{} },
		),
	}
}
